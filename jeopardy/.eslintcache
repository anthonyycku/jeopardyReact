[{"/Users/anthonyku/Desktop/sideProjects/jeopardyReact/jeopardy/src/index.js":"1","/Users/anthonyku/Desktop/sideProjects/jeopardyReact/jeopardy/src/App.js":"2"},{"size":220,"mtime":1610343373675,"results":"3","hashOfConfig":"4"},{"size":3100,"mtime":1610343536402,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"1g4sm8l",{"filePath":"9","messages":"10","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"/Users/anthonyku/Desktop/sideProjects/jeopardyReact/jeopardy/src/index.js",[],["12","13"],"/Users/anthonyku/Desktop/sideProjects/jeopardyReact/jeopardy/src/App.js",["14","15"],"import './App.css';\nimport React from \"react\";\nconst axios = require(\"axios\");\n\n\nconst ButtonReady = props => {\n  return <div>\n    <button className=\"btn btn-warning\" onClick={props.decrease}>Decrease</button>\n    <button className=\"btn btn-success\" onClick={props.increase}>Increase</button>\n    <button className=\"btn btn-danger\" onClick={props.reset}>Reset</button>\n  </div>\n}\n\nconst ButtonUnready = props => {\n  return <div>\n    <button disabled className=\"btn btn-warning\" onClick={props.decrease}>Decrease</button>\n    <button disabled className=\"btn btn-success\" onClick={props.increase}>Increase</button>\n    <button className=\"btn btn-danger\" onClick={props.reset}>Reset</button>\n  </div>\n}\n\nclass Reveal extends React.Component {\n  state = {\n    reveal: false,\n  }\n  reveal = () => {\n    this.setState({\n      reveal: !this.state.reveal\n    })\n  }\n  hide = () => {\n    this.setState({\n      reveal: false\n    })\n  }\n  render() {\n    return <div>\n      {\n        this.state.reveal ?\n          <h3 style={{ color: \"green\" }} onClick={this.reveal}>{this.props.answer}</h3>\n          :\n          <div>\n            <h3 onClick={this.reveal}>Reveal the answer!</h3>\n          </div>\n      }\n    </div>\n  }\n}\n\nconst initialState = {\n  score: 0,\n  ready: false\n}\n\nclass App extends React.Component {\n  state = initialState;\n\n  play = () => {\n    axios.get(\"http://jservice.io/api/random\").then(response => {\n      this.setState({\n        ready: true,\n        question: response.data[0].question,\n        answer: response.data[0].answer,\n        value: response.data[0].value,\n        category: response.data[0].category.title,\n        reveal: false,\n      })\n    })\n    this.changeReveal.current.hide();\n  }\n  decrease = () => {\n    this.setState({\n      score: this.state.score -= this.state.value,\n      ready: false\n    })\n  }\n  increase = () => {\n    this.setState({\n      score: this.state.score += this.state.value,\n      ready: false\n    })\n  }\n  reset = () => {\n    this.setState(initialState);\n  }\n  changeReveal = React.createRef();\n\n  render() {\n    const { question, answer, value, category } = this.state;\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n        <h1> Welcome to Jeffpardy</h1 >\n        <h2><span style={{ color: \"gold\" }}>Score: </span> {this.state.score}</h2>\n\n        <div>\n          {this.state.ready ?\n            <ButtonReady decrease={this.decrease} increase={this.increase} reset={this.reset} />\n            :\n            <ButtonUnready decrease={this.decrease} increase={this.increase} reset={this.reset} />\n          }\n        </div>\n\n        <button className=\"btn btn-primary\" onClick={this.play}>New Question</button>\n        <h3><span style={{ color: \"gold\" }}>Category: </span>{category}</h3>\n        <h3><span style={{ color: \"gold\" }}>Value:</span> {value}</h3>\n        <h3><span style={{ color: \"lightgreen\" }}>Question: </span>{question}</h3>\n\n        <div className=\"answer\">\n          <Reveal answer={answer} ref={this.changeReveal} />\n        </div>\n      </div >\n    )\n  }\n}\n\nexport default App;",{"ruleId":"16","replacedBy":"17"},{"ruleId":"18","replacedBy":"19"},{"ruleId":"20","severity":1,"message":"21","line":73,"column":14,"nodeType":"22","endLine":73,"endColumn":24},{"ruleId":"20","severity":1,"message":"21","line":79,"column":14,"nodeType":"22","endLine":79,"endColumn":24},"no-native-reassign",["23"],"no-negated-in-lhs",["24"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]